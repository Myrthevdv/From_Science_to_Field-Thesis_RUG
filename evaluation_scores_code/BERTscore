{"cells":[{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13732,"status":"ok","timestamp":1718912822643,"user":{"displayName":"M.N. Veen, van der","userId":"13644382690235815504"},"user_tz":-120},"id":"_HA_v9ErgoIb","outputId":"35c85997-8000-4057-c54b-2daf337a82ec"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.0.3)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2023.4)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.25.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n","Requirement already satisfied: bert_score in /usr/local/lib/python3.10/dist-packages (0.3.13)\n","Requirement already satisfied: torch>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from bert_score) (2.3.0+cu121)\n","Requirement already satisfied: pandas>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from bert_score) (2.0.3)\n","Requirement already satisfied: transformers>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from bert_score) (4.41.2)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from bert_score) (1.25.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from bert_score) (2.31.0)\n","Requirement already satisfied: tqdm>=4.31.1 in /usr/local/lib/python3.10/dist-packages (from bert_score) (4.66.4)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from bert_score) (3.7.1)\n","Requirement already satisfied: packaging>=20.9 in /usr/local/lib/python3.10/dist-packages (from bert_score) (24.1)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0.1->bert_score) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0.1->bert_score) (2023.4)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0.1->bert_score) (2024.1)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (3.15.1)\n","Requirement already satisfied: typing-extensions>=4.8.0 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (4.12.2)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (1.12.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (3.3)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (3.1.4)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (2023.6.0)\n","Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (12.1.105)\n","Requirement already satisfied: nvidia-cuda-runtime-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (12.1.105)\n","Requirement already satisfied: nvidia-cuda-cupti-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (12.1.105)\n","Requirement already satisfied: nvidia-cudnn-cu12==8.9.2.26 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (8.9.2.26)\n","Requirement already satisfied: nvidia-cublas-cu12==12.1.3.1 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (12.1.3.1)\n","Requirement already satisfied: nvidia-cufft-cu12==11.0.2.54 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (11.0.2.54)\n","Requirement already satisfied: nvidia-curand-cu12==10.3.2.106 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (10.3.2.106)\n","Requirement already satisfied: nvidia-cusolver-cu12==11.4.5.107 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (11.4.5.107)\n","Requirement already satisfied: nvidia-cusparse-cu12==12.1.0.106 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (12.1.0.106)\n","Requirement already satisfied: nvidia-nccl-cu12==2.20.5 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (2.20.5)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (12.1.105)\n","Requirement already satisfied: triton==2.3.0 in /usr/local/lib/python3.10/dist-packages (from torch>=1.0.0->bert_score) (2.3.0)\n","Requirement already satisfied: nvidia-nvjitlink-cu12 in /usr/local/lib/python3.10/dist-packages (from nvidia-cusolver-cu12==11.4.5.107->torch>=1.0.0->bert_score) (12.5.40)\n","Requirement already satisfied: huggingface-hub<1.0,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from transformers>=3.0.0->bert_score) (0.23.4)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers>=3.0.0->bert_score) (6.0.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers>=3.0.0->bert_score) (2024.5.15)\n","Requirement already satisfied: tokenizers<0.20,>=0.19 in /usr/local/lib/python3.10/dist-packages (from transformers>=3.0.0->bert_score) (0.19.1)\n","Requirement already satisfied: safetensors>=0.4.1 in /usr/local/lib/python3.10/dist-packages (from transformers>=3.0.0->bert_score) (0.4.3)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->bert_score) (1.2.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->bert_score) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->bert_score) (4.53.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->bert_score) (1.4.5)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->bert_score) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->bert_score) (3.1.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->bert_score) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->bert_score) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->bert_score) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->bert_score) (2024.6.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas>=1.0.1->bert_score) (1.16.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=1.0.0->bert_score) (2.1.5)\n","Requirement already satisfied: mpmath<1.4.0,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy->torch>=1.0.0->bert_score) (1.3.0)\n"]}],"source":["!pip install pandas\n","!pip install bert_score\n"]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":15,"status":"ok","timestamp":1718912822643,"user":{"displayName":"M.N. Veen, van der","userId":"13644382690235815504"},"user_tz":-120},"id":"iGRd5pYeiRhf"},"outputs":[],"source":["from transformers import BertTokenizer, BertForMaskedLM, BertModel\n","from bert_score import BERTScorer\n","import pandas as pd\n","from google.colab import files\n"]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":972,"status":"ok","timestamp":1718912823604,"user":{"displayName":"M.N. Veen, van der","userId":"13644382690235815504"},"user_tz":-120},"id":"BXT_ebTIgt6x"},"outputs":[],"source":["df_annotated = pd.read_excel('Evaluation_set.xlsx')\n","df_output = pd.read_excel('Summarized_Articles_Phi3.xlsx')\n","\n","# Initialize the BERTScorer\n","scorer = BERTScorer(model_type='bert-base-uncased')\n","\n"]},{"cell_type":"markdown","metadata":{"id":"SQo4OmbqRS_t"},"source":["# Rank 1 summaries:"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":58842,"status":"ok","timestamp":1718912882442,"user":{"displayName":"M.N. Veen, van der","userId":"13644382690235815504"},"user_tz":-120},"id":"v2iyJoVoQO0V","outputId":"06a62818-c577-4def-abeb-e5d87b0fb84d"},"outputs":[{"output_type":"stream","name":"stdout","text":["                                                Title  \\\n","0   Incidence of Sport-Related Internal Organ Inju...   \n","1   Investigating correlates of athletic identity ...   \n","2   The burden of hospitalized sports-related inju...   \n","3   Sex-Specific Differences in Running Injuries: ...   \n","4   Sports injuries and illnesses during the Grana...   \n","5   Non–Time-Loss and Time-Loss Softball Injuries ...   \n","6   Acute and overuse injuries among sports club m...   \n","7   Skateboarding Injuries in Spain: A Web-Based S...   \n","8   Hand injuries in sports – a retrospective anal...   \n","9   The mechanism of hamstring injuries – a system...   \n","10  Sports injury type and psychological factors a...   \n","\n","    Zero-Shot Summary BERTScore  Article-Top Summary BERTScore  \\\n","0                      0.664146                       0.685774   \n","1                      0.667360                       0.687362   \n","2                      0.722981                       0.698125   \n","3                      0.665468                       0.466505   \n","4                      0.659674                       0.667151   \n","5                      0.648273                       0.675621   \n","6                      0.675146                       0.451043   \n","7                      0.750142                       0.712908   \n","8                      0.683597                       0.656872   \n","9                      0.635499                       0.661992   \n","10                     0.706023                       0.709480   \n","\n","    Article-All Summary BERTScore  Article-all-exlenation-summary BERTScore  \n","0                        0.696126                                  0.674051  \n","1                        0.670074                                  0.641267  \n","2                        0.671096                                  0.671591  \n","3                        0.670395                                  0.641969  \n","4                        0.653114                                  0.623085  \n","5                        0.645307                                  0.649048  \n","6                        0.690030                                  0.670435  \n","7                        0.680110                                  0.708221  \n","8                        0.638069                                  0.678144  \n","9                        0.663333                                  0.659796  \n","10                       0.687685                                  0.691579  \n"]}],"source":["bert_scores_rank_1_df = pd.DataFrame()\n","\n","# Iterate through each row in the df_annotated DataFrame\n","for index, row in df_annotated.iterrows():\n","    title = row['Title']\n","    bert_scores_rank_1_df.loc[index, 'Title'] = title\n","\n","    rank_1_summary = \"\"\n","\n","    # Determine the Rank 2 summary\n","    if row[\"Rank ChatGPT\"] == 1:\n","        rank_1_summary = row[\"Summary ChatGPT\"]\n","    elif row[\"Rank Cohere\"] == 1:\n","        rank_1_summary = row[\"Summary Cohere\"]\n","    elif row[\"Rank Gimini\"] == 1:\n","        rank_1_summary = row[\"Summary Gimini\"]\n","\n","    # Iterate through the columns of df_output with summaries with the four different prompts, starting from the second column and calculate the BERTScore\n","    for col_name in df_output.columns[1:]:\n","        prompt_summary = df_output.loc[index, col_name]\n","        # Calculate the BERTScore between the prompt summary and the rank 1 summary\n","        _, _, bert_score = scorer.score([prompt_summary], [rank_1_summary])\n","        bert_scores_rank_1_df.loc[index, f'{col_name} BERTScore'] = float(bert_score)\n","\n","print(bert_scores_rank_1_df)"]},{"cell_type":"markdown","metadata":{"id":"bIJwkj6sPpCn"},"source":["#Rank 2 summaries:\n","\n","\n","\n"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":37464,"status":"ok","timestamp":1718912776932,"user":{"displayName":"M.N. Veen, van der","userId":"13644382690235815504"},"user_tz":-120},"id":"roHk0SAAAjiM","outputId":"5da2f1da-a40a-45c7-c692-69e05ea4ffaf"},"outputs":[{"output_type":"stream","name":"stdout","text":["                                                Title  \\\n","0   Incidence of Sport-Related Internal Organ Inju...   \n","1   Investigating correlates of athletic identity ...   \n","2   The burden of hospitalized sports-related inju...   \n","3   Sex-Specific Differences in Running Injuries: ...   \n","4   Sports injuries and illnesses during the Grana...   \n","5   Non–Time-Loss and Time-Loss Softball Injuries ...   \n","6   Acute and overuse injuries among sports club m...   \n","7   Skateboarding Injuries in Spain: A Web-Based S...   \n","8   Hand injuries in sports – a retrospective anal...   \n","9   The mechanism of hamstring injuries – a system...   \n","10  Sports injury type and psychological factors a...   \n","\n","    Zero-Shot Summary BERTScore  Article-Top Summary BERTScore  \\\n","0                      0.675265                       0.686830   \n","1                      0.712582                       0.701911   \n","2                      0.685302                       0.666265   \n","3                      0.695401                       0.460085   \n","4                      0.702788                       0.721245   \n","5                      0.664407                       0.669815   \n","6                      0.679615                       0.435894   \n","7                      0.663870                       0.730874   \n","8                      0.690502                       0.662068   \n","9                      0.700196                       0.716066   \n","10                     0.706159                       0.744197   \n","\n","    Article-All Summary BERTScore  Article-all-exlenation-summary BERTScore  \n","0                        0.680556                                  0.675733  \n","1                        0.675425                                  0.666541  \n","2                        0.659308                                  0.653910  \n","3                        0.685976                                  0.657283  \n","4                        0.724227                                  0.686166  \n","5                        0.627199                                  0.647172  \n","6                        0.687905                                  0.689967  \n","7                        0.719906                                  0.686523  \n","8                        0.626241                                  0.635565  \n","9                        0.717768                                  0.735917  \n","10                       0.687505                                  0.720398  \n"]}],"source":["bert_scores_rank_2_df = pd.DataFrame()\n","\n","# Iterate through each row in the df_annotated DataFrame\n","for index, row in df_annotated.iterrows():\n","    title = row['Title']\n","    bert_scores_rank_2_df.loc[index, 'Title'] = title\n","\n","    rank_2_summary = \"\"\n","\n","    # Determine the Rank 2 summary\n","    if row[\"Rank ChatGPT\"] == 2:\n","        rank_2_summary = row[\"Summary ChatGPT\"]\n","    elif row[\"Rank Cohere\"] == 2:\n","        rank_2_summary = row[\"Summary Cohere\"]\n","    elif row[\"Rank Gimini\"] == 2:\n","        rank_2_summary = row[\"Summary Gimini\"]\n","\n","    # Iterate through the columns of df_output with summaries with the four different prompts, starting from the second column and calculate the BERTScore\n","    for col_name in df_output.columns[1:]:\n","        prompt_summary = df_output.loc[index, col_name]\n","        # Calculate the BERTScore between the prompt summary and the rank 2 summary\n","        _, _, bert_score = scorer.score([prompt_summary], [rank_2_summary])\n","        bert_scores_rank_2_df.loc[index, f'{col_name} BERTScore'] = float(bert_score)\n","\n","print(bert_scores_rank_2_df)\n"]},{"cell_type":"markdown","metadata":{"id":"A8oYZJ4UPtIY"},"source":["# Rank 3 summaries:"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":32002,"status":"ok","timestamp":1718912808916,"user":{"displayName":"M.N. Veen, van der","userId":"13644382690235815504"},"user_tz":-120},"id":"L37IELJwRtE9","outputId":"428818cd-f693-4329-d36f-4825f01e0f49"},"outputs":[{"output_type":"stream","name":"stdout","text":["                                                Title  \\\n","0   Incidence of Sport-Related Internal Organ Inju...   \n","1   Investigating correlates of athletic identity ...   \n","2   The burden of hospitalized sports-related inju...   \n","3   Sex-Specific Differences in Running Injuries: ...   \n","4   Sports injuries and illnesses during the Grana...   \n","5   Non–Time-Loss and Time-Loss Softball Injuries ...   \n","6   Acute and overuse injuries among sports club m...   \n","7   Skateboarding Injuries in Spain: A Web-Based S...   \n","8   Hand injuries in sports – a retrospective anal...   \n","9   The mechanism of hamstring injuries – a system...   \n","10  Sports injury type and psychological factors a...   \n","\n","    Zero-Shot Summary BERTScore  Article-Top Summary BERTScore  \\\n","0                      0.678125                       0.713173   \n","1                      0.731293                       0.692101   \n","2                      0.708700                       0.685093   \n","3                      0.718326                       0.435969   \n","4                      0.661340                       0.673795   \n","5                      0.682756                       0.678088   \n","6                      0.691688                       0.454061   \n","7                      0.661547                       0.696528   \n","8                      0.675965                       0.658532   \n","9                      0.705048                       0.702335   \n","10                     0.677888                       0.689411   \n","\n","    Article-All Summary BERTScore  Article-all-exlenation-summary BERTScore  \n","0                        0.730572                                  0.699668  \n","1                        0.688065                                  0.692664  \n","2                        0.671844                                  0.651187  \n","3                        0.710256                                  0.723899  \n","4                        0.649594                                  0.649534  \n","5                        0.641963                                  0.672299  \n","6                        0.721497                                  0.745941  \n","7                        0.680898                                  0.669251  \n","8                        0.651515                                  0.688486  \n","9                        0.697637                                  0.703910  \n","10                       0.703660                                  0.679249  \n"]}],"source":["bert_scores_rank_3_df = pd.DataFrame()\n","\n","\n","# Iterate through each row in the df_annotated DataFrame\n","for index, row in df_annotated.iterrows():\n","    title = row['Title']\n","    bert_scores_rank_3_df.loc[index, 'Title'] = title\n","\n","    rank_3_summary = \"\"\n","\n","    # Determine the Rank 2 summary\n","    if row[\"Rank ChatGPT\"] == 3:\n","        rank_3_summary = row[\"Summary ChatGPT\"]\n","    elif row[\"Rank Cohere\"] == 3:\n","        rank_3_summary = row[\"Summary Cohere\"]\n","    elif row[\"Rank Gimini\"] == 3:\n","        rank_3_summary = row[\"Summary Gimini\"]\n","\n","    # Iterate through the columns of df_output with summaries with the four different prompts, starting from the second column and calculate the BERTScore\n","    for col_name in df_output.columns[1:]:\n","        prompt_summary = df_output.loc[index, col_name]\n","        # Calculate the BERTScore between the prompt summary and the rank 3 summary\n","        _, _, bert_score = scorer.score([prompt_summary], [rank_3_summary])\n","        bert_scores_rank_3_df.loc[index, f'{col_name} BERTScore'] = float(bert_score)\n","\n","print(bert_scores_rank_3_df)"]},{"cell_type":"code","execution_count":8,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1718912808916,"user":{"displayName":"M.N. Veen, van der","userId":"13644382690235815504"},"user_tz":-120},"id":"J9GeyLNoTRKp"},"outputs":[],"source":["excel_file = 'BERTScores.xlsx'\n","with pd.ExcelWriter(excel_file) as writer:\n","    bert_scores_rank_1_df.to_excel(writer, sheet_name='Sheet1', index=False)\n","    bert_scores_rank_2_df.to_excel(writer, sheet_name='Sheet2', index=False)\n","    bert_scores_rank_3_df.to_excel(writer, sheet_name='Sheet3', index=False)"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1718912882443,"user":{"displayName":"M.N. Veen, van der","userId":"13644382690235815504"},"user_tz":-120},"id":"H2MeIKU1Tak0","outputId":"fd2c44b4-580f-4888-c036-135061f242a3"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_812ad386-a013-4865-9b92-24b5bc4806c6\", \"BERTScores.xlsx\", 10201)"]},"metadata":{}}],"source":["files.download(excel_file)\n"]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPsD8Y8wGL63rVeNzS+CjRC"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}